sourceSets {
    testUtil {
        java.srcDir 'src/test-util/java'
        resources.srcDir 'src/test-util/resources'
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile("org.springframework.boot:spring-boot-starter-data-rest")

    // datasource and connection pool dependencies
    //runtime 'org.postgresql:postgresql:9.2-1002-jdbc4'
    compile 'com.h2database:h2'
    compile 'com.zaxxer:HikariCP'

    compile("org.springframework:spring-webmvc")
    compile("org.springframework:spring-context-support")
    compile("org.freemarker:freemarker")

    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("com.google.guava:guava:17.0")
    compile("org.apache.commons:commons-lang3:3.3.2") // remove? not in use
    compile 'org.hibernate:hibernate-validator'

    compile("org.javatuples:javatuples:1.2")

    testUtilCompile "junit:junit"
    testUtilCompile sourceSets.main.output
    testUtilCompile configurations.compile
    testUtilRuntime configurations.runtime

    // pick up common test utility classes
    testCompile sourceSets.testUtil.output

    // for use of spring-test's MatcherAssertionErrors.*
    testCompile "org.springframework:spring-test"
    testCompile "nl.jqno.equalsverifier:equalsverifier:1.+"
}

// Add test-util source directories to IDEA .iml files
idea.module {
    testSourceDirs += (sourceSets.testUtil.java.srcDirs + sourceSets.testUtil.resources.srcDirs)
}

// wikiboot-core is not technically a "Spring Boot" application--it is just a library.
// However, we apply the spring-boot plugin here anyway in order to pick up boot's
// default dependency versioning, such that we stay in sync with other modules that
// are actually "boot"-style apps.
apply plugin: 'spring-boot'
bootRepackage.enabled = false
